@{
    ViewBag.Title = "工程项目管理";
    Layout = "~/Views/Shared/_LayoutIndex.cshtml";
}

<script type="text/javascript">
    $(document).ready(function () {
        GetTree();
        GetGrid();
    });

    //加载左边树
    //注意 FolderId 默认等于1 这样就可以加载一级目录下的子节点文件夹
    var ItemId = 3;
    var TreeId = "";//
    var HavesChildren;
    function GetTree() {
        var itemtree = {
            onnodeclick: function (node) {
                HavesChildren = node.hasChildren;
                TreeId = node.id;
                TreeName = node.text;
                GridFolderEvent(TreeId);
            },
            url: "@Url.Content("/SteelMember/MemberProduce/TreeJsonRawMaterials")?ItemId=" + ItemId
        };
        $("#ItemsTree").treeview(itemtree);
    };
    //表格文件夹点击事件
    function GridFolderEvent(TreeId) {
        $("#gridTable").jqGrid('setGridParam', {
            url: "@Url.Content("/SteelMember/MemberProduce/GridListJsonRawMaterials")?TreeId=" + TreeId, page: 1
        }).trigger('reloadGrid');
    };

    //加载表格
    function GetGrid() {
        var SelectRowIndx;
        $("#gridTable").jqGrid({
            url: "@Url.Content("/SteelMember/MemberProduce/GridListJsonRawMaterials")?TreeId=" + TreeId,
            datatype: "json",
            height: $(window).height() - 130,
            autowidth: true,
            colModel: [
                    { label: '主键', name: "RawMaterialId", hidden: true },
                    { label: '原材料名称', name: "RawMaterialName", index: "MemberNumbering", align:' center',width: 15 },
                    { label: '材料规格', name: "RawMaterialStandard", index: "MemberName", align:' center',width: 15 },
                    { label: "单位", name: "UnitName", index: "UnitName", align:' center',width: 10 },
                    { label: "单价", name: "UnitPrice", index: "UnitPrice", align:' center',width: 10 },
                    { label: '库存量', name: "RawMaterialNumber", index: "RawMaterialConsumption", align:' center',width: 10 },
                    { label: '备注', name: "Description", index: "Description", align:' center',width: 15 },
            ],
            rowNum: 30,
            sortname: 'SortCode',
            sortorder: 'Desc',//降序 asc升序
            pager: "#gridPager",
            viewrecords: true,
            rownumbers: true,
            gridview: true,
            footerData:true,
            rowList: [15, 30, 50, 100, 500, 1000],
            ondblClickRow: function (TreeId) {
                var rowData = $("#gridTable").getRowData(TreeId);  //根据ID拿到一行的数据
                if (rowData.Icon == '-1') {
                    GridFolderEvent(rowData.TreeId);
                    var treeid = "ItemsTree_" + rowData.TreeId.replace(/-/g, '_');
                    $('#' + treeid + ' img').trigger("click");
                }
            },
            onSelectRow: function () {
                SelectRowIndx = GetJqGridRowIndx("#" + this.id);
            },
            gridComplete: function () {
                var ids = $("#gridTable").getDataIDs();
                for (var i = 0; i < ids.length; i++) {
                    var rowData = $("#gridTable").getRowData(ids[i]);
                    if (rowData.Enabled == "无效") {//如果无效，则背景色置于红色
                        $('#' + ids[i]).find("td").addClass("SelectBG");
                    }
                }
                $("#" + this.id).jqGrid('setSelection', SelectRowIndx);
            },

            gridComplete: function () {
                //合计
                $(this).footerData("set", {
                    "RawMaterialName": "合计",
                    "RawMaterialNumber": $(this).getCol("RawMaterialNumber", false, "sum"),
                });

                //表格行样式
                var ids = $("#gridTable").getDataIDs();
                for (var i = 0; i < ids.length; i++) {
                    var rowData = $("#gridTable").getRowData(ids[i]);
                    if (rowData.Enabled == "无效") {//如果无效，则背景色置于红色
                        $('#' + ids[i]).find("td").addClass("SelectBG");
                    }
                }
                $("#" + this.id).jqGrid('setSelection', SelectRowIndx);
            }
        });

        columnModelData("#gridTable");

        //自应高度
        $(window).resize(function () {
            $("#gridTable").setGridHeight($(window).height() - 200);
        });
    };

    //按钮刷新表格树
    function btn_reload() {
        GetTree();
        $("#gridTable").trigger("reloadGrid"); //重新载入
    }
    //刷新
    function windowload() {
        $("#gridTable").trigger("reloadGrid"); //重新载入 
    }


    //查询
    function Search() {
        if (!CheckDataValid('#formsearch')) {
            return false;
        }
        Loading(true, "正在提交数据...");
        var postData = GetWebControls("#formsearch");
        $("#gridTable").jqGrid('setGridParam', {
            url: "@Url.Content("/SteelMember/MemberProduce/GridListJsonRawMaterials")?KeyValue=" + ProjectId, postData, page: 1
            }).trigger('reloadGrid');
            }

    //新增信息
    function btn_add() {
        //var KeyValue = GetJqGridRowValue("#gridTable", "ProjectId");
        if (IsChecked(TreeId)) {
            if (HavesChildren == true) {
                tipDialog("此节点不可编辑，请选择一个子节点", 3, 'warning');
            } else {
                var url = "/SteelMember/MemberProduce/RawMaterialsForm?TreeId= " + TreeId;
                openDialog(url, "RawMaterialsForm", "新增信息", 400, 200, function (iframe) {
                    top.frames[iframe].AcceptClick();
                });
            }
        }
        $("#gridTable").trigger("reloadGrid"); //重新载入
    }

    //编辑信息(得到实体)
    function btn_edit() {
        var KeyValue = GetJqGridRowValue("#gridTable", "RawMaterialId");
        var ItemID = 1;
        if (IsChecked(KeyValue)) {
            var url = "/SteelMember/MemberProduce/RawMaterialsForm?KeyValue= " + KeyValue;
            openDialog(url, "Form", "编辑信息", 600, 400, function (iframe) {
                top.frames[iframe].AcceptClick();
            });
        }
        $("#gridTable").trigger("reloadGrid"); //重新载入
    }

   
    //删除信息
    function btn_delete() {
        var KeyValue = GetJqGridRowValue("#gridTable", "RawMaterialId");
        var Prompt = "您确实要删除此文件吗？";
        if (IsDelData(KeyValue)) {
            delConfirm('/SteelMember/MemberProduce/DeleteRawMaterial', { KeyValue: KeyValue }, Prompt);
            $("#gridTable").trigger("reloadGrid"); //重新载入
        }

    }

    //构件图纸/模型管理
    function btn_drawing() {
        var KeyValue = GetJqGridRowValue("#gridTable", "MemberNumbering");
        var Sort = GetJqGridRowValue("#gridTable", "Sort");
        if (IsChecked(KeyValue)) {
            var url = '/SteelMember/File/DrawingManagement?KeyValue=' + KeyValue;
            Dialog(url, "DrawingManagement", "文件管理", 900, 890, function (iframe) {
                top.frames[iframe].AcceptClick()
            });
        }
    }
       var JsonData1 = "";  var TableObject ="";
    //导出文件
    function btn_derive() {
        SetDeriveExcel("#gridTable", "采购单", "云南公投澄川高速", JsonData1,TableObject.toString());
        openDialog("/SteelMember/File/DeriveFile", "DeriveFile", "信息导出", 900, 500, function (iframe) {
            top.frames[iframe].AcceptClick();
        })
    }

    //提交订单
    function btn_SubmitOrder() {
        var KeyValue = GetJqGridRowValue("#gridTable", "OrderId");
        var Prompt = "您确实要提交此文件吗？";
        if (IsDelData(KeyValue)) {
            delConfirm('/SteelMember/MemberProduce/SubmitProjectDemand', { KeyValue: KeyValue }, Prompt);
        }
        $("#gridTable").trigger("reloadGrid"); //重新载入
    }

</script>
<div id="layout" class="layout">
    <!--左边-->
    <div class="layoutPanel layout-west">
        <div class="btnbartitle">
            <div>
                目录信息
            </div>
        </div>
        <div class="ScrollBar" id="ItemsTree"></div>
    </div>
    <!--中间-->
    <div class="layoutPanel layout-center">
        <div class="btnbartitle">
            <div>
                材料信息<span id="CenterTitle"></span>
            </div>
        </div>
        <div class="tools_bar" style="border-top: none; margin-bottom: 0px;">
            <div class="PartialButton">
                @Html.Partial("_PartialButton")
            </div>
        </div>
        <table id="gridTable"></table>
        <div id="gridPager"></div>
    </div>
</div>
