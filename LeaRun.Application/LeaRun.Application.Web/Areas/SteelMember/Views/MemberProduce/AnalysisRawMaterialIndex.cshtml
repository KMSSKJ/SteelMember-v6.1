@{
    ViewBag.Title = "生产订单原材料分析";
    Layout = "~/Views/Shared/_LayoutIndex.cshtml";
}

<script type="text/javascript">
    $(document).ready(function () {
       // GetTree();
        GetGrid();
    });

    //加载左边树
    //注意 FolderId 默认等于1 这样就可以加载一级目录下的子节点文件夹
    var TreeId = "";//16
   
    //加载表格
    function GetGrid() {
        var RawMaterialNumber;
        var OrderProcessingNumber;
        var SelectRowIndx;
        $("#gridTable").jqGrid({
            url: "@Url.Content("/SteelMember/MemberProduce/TreeGridJsonAnalysisRawMaterial")?TreeId=" + TreeId,
            datatype: "json",

            treeGrid: true,
            treeGridModel: "nested",
            ExpandColumn: "Code",

            height: $(window).height() - 130,
            autowidth: true,
            colModel: [
                    { label: '主键', name: "RawMaterialId", hidden: true },
                    { label: '原材料名称', name: "RawMaterialName", index: "RawMaterialName", align: 'center',width: 15 },
                    { label: '材料规格', name: "RawMaterialStandard", index: "RawMaterialStandard", align: 'center',width: 15 },
                    {
                        label: '库存量', name: "RawMaterialNumber", index: "RawMaterialNumber", align: 'center',width: 10,
                        formatter: function (cellvalue, value, row, index) {
                            RawMaterialNumber = cellvalue;
                            return RawMaterialNumber;
                        }
                    },
                    {
                        label: '订单加工用量', name: "OrderProcessingNumber", index: "OrderProcessingNumber", align: 'center',width: 15,
                        formatter: function (cellvalue, value, row, index) {
                            OrderProcessingNumber = cellvalue;
                            return OrderProcessingNumber;
                        }
                    },
                    {
                        label: '需采购量', name: "PurchaseNumber", index: "PurchaseNumber", align: 'center',width: 15,
                        formatter: function (cellvalue, value, row, index) {
                            var PurchaseNumber = cellvalue;
                            PurchaseNumber = RawMaterialNumber - OrderProcessingNumber;
                            if (PurchaseNumber < 0) {
                                var str = PurchaseNumber.toString();
                                PurchaseNumber = str.replace(/-/, "");
                                return PurchaseNumber;
                            } else if (0 <= PurchaseNumber & PurchaseNumber<100) {
                                return "库存量过低，请注意采购";
                            } else {
                                return "无需采购";
                            }
                        }
                    },
                    { label: '备注', name: 'Description', index: 'Description', align:' center',width: 15 },
            ],
            rowNum: 30,
            sortname: 'SortCode',
            sortorder: 'Desc',//降序 asc升序
            pager: "#gridPager",
            viewrecords: true,
            rownumbers: true,
            gridview: true,
            footerrow: true,
            rowList: [15, 30, 50, 100, 500, 1000],
            ondblClickRow: function (TreeId) {
                var rowData = $("#gridTable").getRowData(TreeId);  //根据ID拿到一行的数据
                if (rowData.Icon == '-1') {
                    GridFolderEvent(rowData.TreeId);
                    var treeid = "ItemsTree_" + rowData.TreeId.replace(/-/g, '_');
                    $('#' + treeid + ' img').trigger("click");
                }
            },
            onSelectRow: function () {
                SelectRowIndx = GetJqGridRowIndx("#" + this.id);
            },
            gridComplete: function () {
                //合计
                $(this).footerData("set", {
                    "OrderNumbering": "合计",
                    "Number": $(this).getCol("Number", false, "sum"),
                    "MaterialBudget": $(this).getCol("MaterialBudget", false, "sum"),
                });

                //表格行样式
                var ids = $("#gridTable").getDataIDs();
                for (var i = 0; i < ids.length; i++) {
                    var rowData = $("#gridTable").getRowData(ids[i]);
                    if (rowData.Enabled == "无效") {//如果无效，则背景色置于红色
                        $('#' + ids[i]).find("td").addClass("SelectBG");
                    }
                }
                $("#" + this.id).jqGrid('setSelection', SelectRowIndx);
            }
        });
        columnModelData("#gridTable");
        //自应高度
        $(window).resize(function () {
            $("#gridTable").setGridHeight($(window).height() - 200);
        });

    }

    //刷新表格 树
    function btn_reload() {
        $("#gridTable").trigger("reloadGrid"); //重新载入
    }

    //新增信息
    function btn_add() {
        var KeyValue = GetJqGridRowValue("#gridTable", "AnalysisRawMaterialId");
        var OrderNumbering = GetJqGridRowValue("#gridTable", "OrderNumbering");
        var ItemId = 3;
        if (OrderNumbering = !"") {
            if (IsChecked(KeyValue)) {
                var url = "/SteelMember/MemberProduce/AnalysisRawMaterialForm?KeyValue= " + KeyValue + "&ItemId=" + ItemId + "&OrderNumbering=" + OrderNumbering;
                openDialog(url, "AnalysisRawMaterialForm", "新增信息", 500, 400, function (iframe) {
                    top.frames[iframe].AcceptClick();
                });
            }
        } else {
            alertDialog("请选择订单！", 0);
        }
        $("#gridTable").trigger("reloadGrid"); //重新载入
    }

    //编辑信息(得到实体)
    function btn_edit() {
        var KeyValue = GetJqGridRowValue("#gridTable", "AnalysisRawMaterialId");
        var OrderNumbering = GetJqGridRowValue("#gridTable", "OrderNumbering");
        var ItemId = 3;
        if(OrderNumbering==""){
            if (IsChecked(KeyValue)) {
                var url = "/SteelMember/MemberProduce/AnalysisRawMaterialForm?KeyValue= " + KeyValue + "&ItemId=" + ItemId + "&OrderNumbering=" + OrderNumbering;
                openDialog(url, "AnalysisRawMaterialForm", "编辑信息", 600, 400, function (iframe) {
                    top.frames[iframe].AcceptClick();
                });
            }}else{
            alertDialog("请选择原材料！", 0);
        }
        $("#gridTable").trigger("reloadGrid"); //重新载入
    }

    //标记删除信息
    function btn_mark() {
        var KeyValue = GetJqGridRowValue("#gridTable", "OrderId");
        var Prompt = "您确实要删除此文件吗？";
        if (IsDelData(KeyValue)) {
            delConfirm('/SteelMember/MemberProduce/MarkProjectDemand', { KeyValue: KeyValue }, Prompt);
        }
        $("#gridTable").trigger("reloadGrid"); //重新载入
    }

    //删除信息
    function btn_delete() {
        var KeyValue = GetJqGridRowValue("#gridTable", "OrderId");
        var Prompt = "您确实要删除此文件吗？";
        if (IsDelData(KeyValue)) {
            delConfirm('/SteelMember/MemberProduce/DeleteProjectOrder', { KeyValue: KeyValue }, Prompt);
            $("#gridTable").trigger("reloadGrid"); //重新载入
        }

    }

    //确认信息
    function btn_confirm() {
        var KeyValue = GetJqGridRowValue("#gridTable", "OrderId");
        var Prompt = "您确实要提交此文件吗？";
        if (IsDelData(KeyValue)) {
            delConfirm('/SteelMember/MemberProduce/ConfirmOrder', { KeyValue: KeyValue }, Prompt);
        }
        $("#gridTable").trigger("reloadGrid"); //重新载入
    }

    //构件图纸/模型管理
    function btn_drawing() {
        var KeyValue = GetJqGridRowValue("#gridTable", "MemberId");
        var Sort = GetJqGridRowValue("#gridTable", "Sort");
        if (IsChecked(KeyValue)) {
                var url = '/SteelMember/File/DrawingManagement?KeyValue=' + KeyValue;
                Dialog(url, "DrawingManagement", "文件管理", 900, 890, function (iframe) {
                    top.frames[iframe].AcceptClick()
                });
        }
    }


    //导出文件
    var JsonData1 = ""; var TableObject = "";
    function btn_derive() {
        SetDeriveExcel("#gridTable", "构件原材料分析", "云南公投澄川高速", JsonData1, TableObject.toString());
        openDialog("/SteelMember/File/DeriveFile", "DeriveFile", "信息导出", 900, 500, function (iframe) {
            top.frames[iframe].AcceptClick();
        })
    }

</script>

<div class="tools_bar leftline rightline" style="margin-bottom: 0px; margin: 1px;">
    <div class="PartialButton">
        @Html.Partial("_PartialButton")
    </div>
</div>
<div class="rightline" style="margin: 1px; margin-top: -1px;">
    <table id="gridTable"></table>
    <div id="gridPager"></div>
</div>