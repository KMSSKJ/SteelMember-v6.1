@{
    ViewBag.Title = "工程项目管理";
        Layout = "~/Views/Shared/_LayoutIndex.cshtml";
}

<script type="text/javascript">
    $(document).ready(function () {
        GetTree();
        GetGrid();
        SwitchListAndView();
    });

    //加载左边树
    //注意 FolderId 默认等于1 这样就可以加载一级目录下的子节点文件夹
    var TreeId ="";//1
    var ItemId = 1;
    //ItemId = GetQuery("ItemID"), ProjectName = "", IsPublic = "1";
    function GetTree() {
        var itemtree = {
            onnodeclick: function (node) {
                TreeId = node.id;
                TreeName = node.text;
                GridFolderEvent(TreeId);
            },
            url: "@Url.Content("/SteelMember/ProjectWarehouse/TreeJson")?ItemId=" + ItemId
        };
        $("#ItemsTree").treeview(itemtree);
    };

    //表格文件夹点击事件
    function GridFolderEvent(TreeId) {
        $("#gridTable").jqGrid('setGridParam', {
            url: "@Url.Content("/SteelMember/ProjectWarehouse/GridListJson")?TreeId=" + TreeId, page: 1
        }).trigger('reloadGrid');
    }

    //加载表格
    function GetGrid() {
        var SelectRowIndx;
        $("#gridTable").jqGrid({
            url: "@Url.Content("/SteelMember/ProjectWarehouse/GridListJson")?TreeId=" + TreeId,
            datatype: "json",
            height: $(window).height() - 130,
            autowidth: true,
            colModel: [
                    { label: '主键', name: "ProjectWarehouseId", hidden: true },
                    { label: '构件名', name: "MemberName", index: "MemberName", align:' center',width: 6 },
                    //{ label: '构件编号', name: "MemberNumbering", index: "MemberNumbering", align:' center',width: 12 },
                    { label: '构件型号', name: "MemberModel", index: "MemberModel", align:' center',width: 6 },
                    { label: '库存数量', name: "InStock", index: "InStock", align:' center',width: 12 },
                    { label: '损伤程度', name: "Damage", index: "Damage", align:' center',width: 16 },
                    { label: '可调配量', name: "Damage", index: "Damage", align: ' center', width: 16 },
                    {
                        label: '入库时间', name: "ModifyTime", index: "ModifyTime", align: ' center', width: 16,
                        formatter: function (cellvalue, options, rowObject) {
                            return formatDate(cellvalue, 'yyyy-MM-dd');
                        }
                    },
                    //{ label: '入库量', name: "Class", index: "Class", align:' center',width: 16 },
                    //{ label: '出库量', name: "Class", index: "Class", align:' center',width: 16 },
                    { label: '库管员', name: "Librarian", index: "Librarian", align:' center',width: 16 },
                    { label: '备注', name: "Description", index: "Description", align:' center',width: 12 },
            ],
            rowNum: 30,
            sortname: 'SortCode',
            sortorder: 'Desc',//降序 asc升序
            pager: "#gridPager",
            viewrecords: true,
            rownumbers: true,
            gridview: true,
            footerrow: true,
            rowList: [15, 30, 50, 100, 500, 1000],
            ondblClickRow: function (TreeId) {
                var rowData = $("#gridTable").getRowData(TreeId);  //根据ID拿到一行的数据
                if (rowData.Icon == '-1') {
                    GridFolderEvent(rowData.TreeId);
                    var treeid = "ItemsTree_" + rowData.TreeId.replace(/-/g, '_');
                    $('#' + treeid + ' img').trigger("click");
                }
            },
            onSelectRow: function () {
                SelectRowIndx = GetJqGridRowIndx("#" + this.id);
            },
            gridComplete: function () {
                //合计
                $(this).footerData("set", {
                    "MemberName": "合计",
                    "InStock": $(this).getCol("InStock", false, "sum"),
                });

                //表格行样式
                var ids = $("#gridTable").getDataIDs();
                for (var i = 0; i < ids.length; i++) {
                    var rowData = $("#gridTable").getRowData(ids[i]);
                    if (rowData.Enabled == "无效") {//如果无效，则背景色置于红色
                        $('#' + ids[i]).find("td").addClass("SelectBG");
                    }
                }
                $("#" + this.id).jqGrid('setSelection', SelectRowIndx);
            }
        });
        columnModelData("#gridTable");
        //自应高度
        $(window).resize(function () {
            $("#gridTable").setGridHeight($(window).height() - 200);
        });

    }

    //按钮刷新表格树
    function btn_reload() {
        GetTree();
        $("#gridTable").trigger("reloadGrid"); //重新载入
    }
    //刷新
    function windowload() {
        $("#gridTable").trigger("reloadGrid"); //重新载入 
    }

    //查询
    function Search() {
        if (!CheckDataValid('#formsearch')) {
            return false;
        }
        Loading(true, "正在提交数据...");
        var postData = GetWebControls("#formsearch");
        $("#gridTable").jqGrid('setGridParam', {
            url: "@Url.Content("/SteelMember/ProjectWarehouse/GridListJson")?ProjectId=" + ProjectId, postData, page: 1
            }).trigger('reloadGrid');
            }

    //新建树
    function btn_addfolder() {
        //var FolderId = GetJqGridRowValue("#gridTable", "TreeID");
        var ItemID = GetQuery("ItemID");
        if (!!TreeId) {
            var url = "/SteelMember/Tree/FolderForm?TreeId=" + TreeId + '&ItemID=' + ItemID;
            openDialog(url, "Form", "新增信息", 500, 400, function (iframe) {
                top.frames[iframe].AcceptClick()
            });
        } else if (!!ItemID) {
            var url = "/SteelMember/Tree/FolderForm?TreeId=" + ItemID + '&ItemID=' + ItemID;
            openDialog(url, "Form", "新增信息", 500, 400, function (iframe) {
                top.frames[iframe].AcceptClick()
            });
        }
        else {
            tipDialog('请选择目录。', 4, 'warning');
        }
        $("#gridTable").trigger("reloadGrid"); //重新载入
    }

    //编辑树节点(得到实体)
    function btn_editfolder() {
        var KeyValue = TreeId;
            if (IsChecked(KeyValue)) {
                var url = "/SteelMember/Tree/FolderForm?KeyValue= " + KeyValue;
                openDialog(url, "Form", "编辑信息", 600, 400, function (iframe) {
                    top.frames[iframe].AcceptClick();
                });
            }

        $("#gridTable").trigger("reloadGrid"); //重新载入
    }

    //销毁树节点
    function btn_deletefolder() {
        var KeyValue = TreeId;
        var Prompt = "您确实要删除此文件吗？";
        if (IsDelData(KeyValue)) {
            delConfirm('/SteelMember/Tree/DeleteTree', { KeyValue: KeyValue }, Prompt);
        }
        $("#gridTable").trigger("reloadGrid"); //重新载入
    }

    //新增信息
    function btn_add() {
        //var KeyValue = GetJqGridRowValue("#gridTable", "ProjectId");
        if (IsChecked(TreeId)) {
            var url = "/SteelMember/ProjectWarehouse/Form?TreeId= " + TreeId;
            openDialog(url, "Form", "新增信息", 500, 400, function (iframe) {
                top.frames[iframe].AcceptClick();
            });
        }
        $("#gridTable").trigger("reloadGrid"); //重新载入
    }

    //编辑信息(得到实体)
    function btn_edit() {
        var KeyValue = GetJqGridRowValue("#gridTable", "ProjectWarehouseId");
        var ItemID = 1;
        if (IsChecked(KeyValue)) {
            var url = "/SteelMember/ProjectWarehouse/Form?KeyValue= " + KeyValue + "&ItemID=" + ItemID;
            openDialog(url, "Form", "编辑信息", 600, 400, function (iframe) {
                top.frames[iframe].AcceptClick();
            });
        }
    }

    //删除信息
    function btn_delete() {
        var KeyValue = GetJqGridRowValue("#gridTable", "ProjectWarehouseId");
        var Prompt = "您确实要删除此文件吗？";
        if (IsDelData(KeyValue)) {
            delConfirm('/SteelMember/ProjectWarehouse/DeleteData', { KeyValue: KeyValue }, Prompt);
        }

    }

    //构件图纸/模型管理
    function btn_drawing() {
        var KeyValue = GetJqGridRowValue("#gridTable", "MemberNumbering");
        var Sort = GetJqGridRowValue("#gridTable", "Sort");
        if (IsChecked(KeyValue)) {
                var url = '/SteelMember/File/DrawingManagement?KeyValue=' + KeyValue;
                Dialog(url, "DrawingManagement", "文件管理", 900, 890, function (iframe) {
                    top.frames[iframe].AcceptClick()
                });
        }
    }

    //查询
    var QueryParamJson = "";
    function btn_query() {
        QueryDialog("/SteelMember/ProjectWarehouse/QueryPage", "QueryPage", "查询", 680, 30, function (iframe) {
            top.frames[iframe].QueryClick(function (JsonData) {
                QueryParamJson = JsonData;
                $("#gridTable").jqGrid('setGridParam', {
                    url: "@Url.Content("/SteelMember/ProjectWarehouse/GridListJson")?ParameterJson=" + escape(JsonData), page: 1
            }).trigger('reloadGrid');
        });
    });
    }

    var JsonData1, TableObject = "";
    //导出文件
    function btn_derive() {
        SetDeriveExcel("#gridTable", "项目仓库表", "云南公投澄川高速", JsonData1, TableObject.toString());
        openDialog("/SteelMember/File/DeriveFile", "DeriveFile", "信息导出", 900, 500, function (iframe) {
            top.frames[iframe].AcceptClick();
        })
    }


    ////提交信息
    //function btn_SubmitOrder() {
    //    var KeyValue = GetJqGridRowValue("#gridTable", "ProjectDemandId");
    //    var Prompt = "您确实要提交此文件吗？";
    //    if (IsDelData(KeyValue)) {
    //        delConfirm('/SteelMember/ProjectOrder/SubmitProjectDemand', { KeyValue: KeyValue }, Prompt);
    //    }
    //    $("#gridTable").trigger("reloadGrid"); //重新载入
    //}

    /*视图begin=========================================================================*/
    //切换到列表/视图
    function SwitchListAndView() {
        $('#grid_View').height($(window).height() - 78)
        $('.switch-btns li').click(function () {
            $('.switch-btns li').removeClass('selected');
            $(this).addClass('selected');
            if ($(this).attr('id') == 'li-switch-list') {
                $(this).find('div').addClass('icon-btn-switch-list-select');
                $("#li-switch-view").find('div').addClass('icon-btn-switch-view');
                $("#li-switch-view").find('div').removeClass('icon-btn-switch-view-select');
                $('#grid_List').show();
                $('#grid_View').hide();
            }
            //显示视图
            if ($(this).attr('id') == 'li-switch-view') {
                $(this).find('div').addClass('icon-btn-switch-view-select');
                $("#li-switch-list").find('div').addClass('icon-btn-switch-list');
                $("#li-switch-list").find('div').removeClass('icon-btn-switch-list-select');
                $('#grid_List').hide();
                $('#grid_View').show();
                var data = $("#gridTable").jqGrid("getRowData");
                var html = "";
                for (var i = 0; i < data.length; i++) {
                    var icon = data[i].icon;
                    if (icon == "-1") {
                        icon = "Folder";
                    }
                    html += '<div class="filelist-item">';
                    html += '<div><img src="../../Content/Images/fileType/' + icon + '_72.png" /></div>';
                    html += '<div title="' + data[i].fullname + '" class="filelist-text">' + data[i].fullname + '</div>';
                    html += '</div>';
                }
                $("#grid_View").html(html);
            }
        })
    }
</script>
<div id="layout" class="layout">
    <!--左边-->
    <div class="layoutPanel layout-west">
        <div class="btnbartitle">
            <div>
                目录信息
            </div>
        </div>
        <div class="ScrollBar" id="ItemsTree"></div>
    </div>
    <!--中间-->
    <div class="layoutPanel layout-center">
        <div class="btnbartitle">
            <div>
                库存信息<span id="CenterTitle"></span>
            </div>
        </div>
        <div class="tools_bar" style="border-top: none; margin-bottom: 0px;">
            <div class="PartialButton">
                @Html.Partial("_PartialButton")
            </div>
        </div>
        <table id="gridTable"></table>
        <div id="gridPager"></div>
    </div>
</div>
